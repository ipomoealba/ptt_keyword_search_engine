# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-31 15:53
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiSexual',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('ptime', models.DateTimeField()),
                ('arthor', models.CharField(max_length=30)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('content_keywords', models.TextField(blank=True, null=True)),
                ('comment_keywords', models.TextField(blank=True, null=True)),
                ('push', models.IntegerField(blank=True, null=True)),
                ('sheee', models.IntegerField(blank=True, null=True)),
                ('arrow', models.IntegerField(blank=True, null=True)),
                ('first_page', models.IntegerField()),
                ('relink', models.IntegerField()),
                ('board', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'Bi_sexual',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BiSexualContent',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Bi_sexual_Content',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BiSexualReply',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('reply', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Bi_sexual_Reply',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FeminineSex',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('ptime', models.DateTimeField()),
                ('arthor', models.CharField(max_length=30)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('content_keywords', models.TextField(blank=True, null=True)),
                ('comment_keywords', models.TextField(blank=True, null=True)),
                ('push', models.IntegerField(blank=True, null=True)),
                ('sheee', models.IntegerField(blank=True, null=True)),
                ('arrow', models.IntegerField(blank=True, null=True)),
                ('first_page', models.IntegerField()),
                ('relink', models.IntegerField()),
                ('board', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'Feminine_Sex',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FeminineSexContent',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Feminine_Sex_Content',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FeminineSexReply',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('reply', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Feminine_Sex_Reply',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Gay',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('ptime', models.DateTimeField()),
                ('arthor', models.CharField(max_length=30)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('content_keywords', models.TextField(blank=True, null=True)),
                ('comment_keywords', models.TextField(blank=True, null=True)),
                ('push', models.IntegerField(blank=True, null=True)),
                ('sheee', models.IntegerField(blank=True, null=True)),
                ('arrow', models.IntegerField(blank=True, null=True)),
                ('first_page', models.IntegerField()),
                ('relink', models.IntegerField()),
                ('board', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'Gay',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GayContent',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Gay_Content',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GayReply',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('reply', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Gay_Reply',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Gossiping',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('ptime', models.DateTimeField()),
                ('arthor', models.CharField(max_length=30)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('content_keywords', models.TextField(blank=True, null=True)),
                ('comment_keywords', models.TextField(blank=True, null=True)),
                ('push', models.IntegerField(blank=True, null=True)),
                ('sheee', models.IntegerField(blank=True, null=True)),
                ('arrow', models.IntegerField(blank=True, null=True)),
                ('first_page', models.IntegerField()),
                ('relink', models.IntegerField()),
                ('board', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'Gossiping',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GossipingContent',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Gossiping_Content',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GossipingReply',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('reply', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Gossiping_Reply',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Keywords',
            fields=[
                ('pid', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('content_keywords', models.TextField(blank=True, null=True)),
                ('comment_keywords', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Keywords',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Newkeywords',
            fields=[
                ('id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('keyword', models.CharField(max_length=50)),
                ('category', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'Newkeywords',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sex',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('ptime', models.DateTimeField()),
                ('arthor', models.CharField(max_length=30)),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('content_keywords', models.TextField(blank=True, null=True)),
                ('comment_keywords', models.TextField(blank=True, null=True)),
                ('push', models.IntegerField(blank=True, null=True)),
                ('sheee', models.IntegerField(blank=True, null=True)),
                ('arrow', models.IntegerField(blank=True, null=True)),
                ('first_page', models.IntegerField()),
                ('relink', models.IntegerField()),
                ('board', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'Sex',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SexContent',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Sex_Content',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SexReply',
            fields=[
                ('pid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('reply', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Sex_Reply',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserSavePost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datasetclass', models.CharField(db_column='dataSetClass', max_length=45)),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.CharField(max_length=45)),
                ('gossiping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gossiping.Gossiping')),
            ],
            options={
                'db_table': 'user_save_post',
                'managed': True,
            },
        ),
    ]
